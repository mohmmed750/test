
#import "CustomerFeedbackViewController.h"
#import "CustomerFeedbackObject1.h"
@interface CustomerFeedbackViewController ()

@property (strong, nonatomic) NSMutableArray<CustomerFeedbackObject1 *> *tableData;
@property (weak, nonatomic) UIBarButtonItem *filterButton; //123

@end

@implementation CustomerFeedbackViewController



- (void)viewDidLoad {

    [super viewDidLoad];
    total_notes = 0 ;
    selection_pres = 0 ;
    
 
    
    
    //
    self.tableData = NSMutableArray.new;
    brandsList = [[NSMutableArray alloc] init];
    presentationList = [[NSMutableArray alloc] init];
    teamMembersList = [[NSMutableArray alloc] init];
    
    [self addNoneAndAllOptionsToFilters];
    
    // Get Current year and month
    NSDateComponents *components = [[NSCalendar currentCalendar] components: NSCalendarUnitMonth | NSCalendarUnitYear fromDate:[NSDate date]];
    NSInteger month = [components month];
    NSString *year = [NSString stringWithFormat:@"%.2ld",[components year]] ;
    [self getFromToDate:month inYear:year];
    
    // Disable filter button since no data is selected yet from the filter
    _filterButton =  [self navigationItem].rightBarButtonItems[0];
    _filterButton.enabled = NO;
    
    //
    [self getFiltersLists];
    
    // Remove padding on top of the table
    self.tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, self.tableView.bounds.size.width, 0.01f)];
    
    //
//    [self getCallsList:NO];
}

- (void)addNoneAndAllOptionsToFilters{
    
    // Add None And All options to filter arrays
    FAPickerItem* itemNone = [[FAPickerItem alloc] initWithID:@""
                                                        Title:@""];
    FAPickerItem* itemAll = [[FAPickerItem alloc] initWithID:@""
                                                       Title:@"All"];
    // teamMembersList
    [teamMembersList addObject: itemNone];
    [teamMembersList addObject: itemAll];
    
    // brandsList
//    [brandsList addObject: itemNone];
    

    
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    //
    [self.tabBarController.tabBar setHidden:YES];
    
    // Adjust Navigation Bar Height
    if (!isTargetedSize){
        //-------------------------------------------------------------
        self.navigationItem.prompt = @"                              ";
        //-------------------------------------------------------------
        
    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)getFiltersLists{
    NSDictionary *parameters1 = [NSDictionary new];
    parameters1 = @{
                    @"emp_id":employee_id
                    };
    [self postRequestWithURL:read_employees_url(employee_server_url)
                  parameters:parameters1 completionHandler:^(NSURLResponse *response, id responseObject) {
                      if (responseObject) {
                          
                          NSArray* team_members = [[NSArray alloc] initWithArray: [responseObject objectForKey:@"Read_Employees"]];
                          for (NSDictionary *object in team_members) {
                              FAPickerItem* item = [[FAPickerItem alloc] initWithID:[object objectForKey:@"emp_id"]
                                                                              Title:[object objectForKey:@"employee_name"]];
                              [self->teamMembersList addObject: item];
                          }
                      }
                  }];
    
    NSLog(@"%@",read_brands_url(employee_server_url) );
   [self postRequestWithURL:read_brands_url(employee_server_url)
                 parameters:parameters1 completionHandler:^(NSURLResponse *response, id responseObject) {
                     if (responseObject) {
                         NSLog(@"%@",responseObject);
                         NSArray* data = [[NSArray alloc] initWithArray: [responseObject objectForKey:@"Read_Brands"]];
                         for (NSDictionary* object in data) {
                             FAPickerItem *brandItem = [[FAPickerItem alloc] initWithID:[object objectForKey:@"brand_id"]
                                                                                  Title:[object objectForKey:@"brand_name_en"]];
                           
                             [self->brandsList addObject:brandItem];
                         }
                
                     }
   }];

   
}
- (void)getPresentationList{
    
    presentationList = [[NSMutableArray alloc] init];
    
    
    NSDictionary *parameters1 = [NSDictionary new];
    parameters1 = @{
                    @"brand_id":selectedBrand.Id
                    };
    // get the promotion item url
    NSLog(@"%@",presentations_brand_url(employee_server_url) );
   [self postRequestWithURL:presentations_brand_url(employee_server_url)
                 parameters:parameters1 completionHandler:^(NSURLResponse *response, id responseObject) {
                     if (responseObject) {
                         
                         
                        
                         
                         
                         NSLog(@"%@",responseObject);
                         NSArray* data = [[NSArray alloc] initWithArray: [responseObject objectForKey:@"Presentation_depend_brand"]];
                         if ([data count] > 0){
                             FAPickerItem* itemNone = [[FAPickerItem alloc] initWithID:@""
                                                                                 Title:@""];
                             FAPickerItem* itemAll = [[FAPickerItem alloc] initWithID:@""
                                                                                Title:@"All"];
                             // teamMembersList
                             [self->presentationList addObject: itemNone];
                             [self->presentationList addObject: itemAll];
                         }
                         for (NSDictionary* object in data) {
                            
                             FAPickerItem *brandItem = [[FAPickerItem alloc] initWithID:[object objectForKey:@"presentation_id"]
                                                                                  Title:[object objectForKey:@"presentation_name"]];
                             [self->presentationList addObject:brandItem];
                             
                         }
                
                     }
   }];

   
}

- (void)getFromToDate:(NSInteger)month inYear: (NSString *)year{
    
    switch (month) {
        case 1: case 2: case 3:
            fromDate = [NSString stringWithFormat: @"%@-01-01", year];//2019-01-01
            toDate = [NSString stringWithFormat: @"%@-03-31", year];;
            break;
        case 4: case 5: case 6:
            fromDate = [NSString stringWithFormat: @"%@-04-01", year];//2019-01-01
            toDate = [NSString stringWithFormat: @"%@-06-30", year];;
            break;
        case 7: case 8: case 9:
            fromDate = [NSString stringWithFormat: @"%@-07-01", year];//2019-01-01
            toDate = [NSString stringWithFormat: @"%@-09-30", year];;
            break;
        case 10: case 11: case 12:
            fromDate = [NSString stringWithFormat: @"%@-10-01", year];//2019-01-01
            toDate = [NSString stringWithFormat: @"%@-12-31", year];;
            break;
            
        default:
            fromDate = [NSString stringWithFormat: @"%@-01-01", year];//2019-01-01
            toDate = [NSString stringWithFormat: @"%@-03-31", year];;
            break;
    }
}



- (IBAction)filterButtonFunctionality:(id)sender {
  
    self.tableData = NSMutableArray.new;
    NSLog(@"tableData %lu", [_tableData count]);
//    self->total_notes = 0 ;
    
    dispatch_async(dispatch_get_main_queue(), ^{
        [self.tableView reloadData];
      
       // tableview_in
    });

    [self getCallsList:YES];
    NSLog(@"count 12%lu", (unsigned long)[self.tableData count] );
}

- (void)getCallsList:(BOOL)withFiltiration {
    NSDictionary *parameters = [NSDictionary new];

    if (withFiltiration) {
        
       
        
        parameters = @{
                       @"brand_id": selectedBrand ? selectedBrand.Id : @"",
                       @"emp_id":selectedTeamMember ? selectedTeamMember.Id : @"",
                       @"presentation_id": selectedPresentation ? selectedPresentation.Id : @"", //edit
                       @"from_date": fromDate,
                       @"to_date": toDate,
                       @"empLoginId":employee_id,
                       };
    } else {
        parameters = @{
                       @"brand_id": @"1",
                       @"emp_id":@"",
                       @"presentation_id": @"",
                       @"from_date": @"",
                       @"to_date": @"",
                       @"empLoginId":employee_id,
                       };
    }
    
    NSLog(@"parameters%@", parameters);
    [self postRequestWithURL:edetailing_customer_feedback_url(employee_server_url)
                  parameters:parameters
           completionHandler:^(NSURLResponse *response, id responseObject) {
               if (responseObject) {
                 
                   //
                   NSArray* array = [[NSArray alloc] initWithArray:[responseObject objectForKey:@"NumberOfPresentationsOnCustomerfeedbackPerMsg"]];
                   NSMutableArray<CustomerFeedbackObject1 *> *tempArray = NSMutableArray.new;
                   
                   for (NSDictionary* object in array) {
                       
                       CustomerFeedbackObject1* employees = [[CustomerFeedbackObject1 alloc] init];
                       employees.slide_feedback_array = [[NSMutableArray alloc] init];
                       // Name aka: name_flsm
                       NSString* name_brand = [NSString stringWithFormat:@"%@", [object objectForKey:@"brand_name"]];
                       employees.name_brand = name_brand;
                       
                       NSString* name_pres = [NSString stringWithFormat:@"%@", [object objectForKey:@"presentation_name"]];
                       employees.presentation = name_pres;
                       
                       // Array of coach reps aka: coachingDaysRep
                       NSArray* totalArray = [[NSArray alloc] initWithArray: [object objectForKey:@"slide_list"]];
                      
                       self->total_notes += [totalArray count];
                       self->selection_pres = 0 ;
                     
                     
                       
                       for (NSDictionary* object in totalArray) {
                           
                           // aka coachingDaysPerRep
                        
                          
                           NSMutableDictionary* dictionary = [[NSMutableDictionary alloc] initWithDictionary:object];
                                                      
                           [employees.slide_feedback_array addObject:dictionary];
                       }
                       
                       [tempArray addObject:employees];
                       
                   }
                   NSDictionary* totalValue = [responseObject objectForKey:@"total"];
                   self->total = totalValue;

                   
                   self.tableData = tempArray;
                   dispatch_async(dispatch_get_main_queue(), ^{
                       [self.tableView reloadData];
                   });
               }
           }];
}




#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    if(tableView.tag == 0){
       
    NSInteger numOfSections = 1;
    if (_tableData && [_tableData count] != 0)
    {
        numOfSections = 4;
        tableView.backgroundView.hidden = true;
    }
    // Add "No Data" Message
    else
    {
        if (!tableView.backgroundView){
            UILabel *noDataLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, tableView.bounds.size.width, tableView.bounds.size.height)];
            noDataLabel.text = @"No data returned based on the selected filters";
            noDataLabel.textColor = [UIColor blackColor];
            noDataLabel.textAlignment = NSTextAlignmentCenter;
            tableView.backgroundView = noDataLabel;
//            tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        }else{
            tableView.backgroundView.hidden = false;
        }
    }
    return numOfSections;
    } else{
        NSLog(@"%@", @"here99");
        return 1;
    }
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
 

    
    if(tableView.tag == 0){
     //   if([tableView.accessibilityIdentifier isEqual: c@"main"]){
    
    if (section == 0) {
        return 1;
    }else if(section == 1){
        return 1;
    }else if(section == 3){
        return 1;
    }
    else if (section == 2 ){
        NSLog(@"total_notes : %lu", (unsigned long)self->total_notes);
        //return total_notes;
    //  return [self.tableData[section - 2].slide_feedback_array count];
        return [self.tableData count];
    }else {
        return 1;
    }

    }else{
        if ([_tableData[selection_pres].slide_feedback_array count]> 0){
            return [_tableData[selection_pres].slide_feedback_array count];
        }
        return 1;
    }
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSLog(@"tableView.tag = %ld", (long)tableView.tag);
  //  NSLog(@"section = %ld", (long)indexPath.section);
    if(tableView.tag == 0){
       switch (indexPath.section) {
        case 0: {
            CustomerFeedbackCell_3 *cell = [tableView dequeueReusableCellWithIdentifier:@"cell_3"
                                                                                             forIndexPath:indexPath];
            if (cell == nil) {
                cell = [[CustomerFeedbackCell_3 alloc] initWithStyle:UITableViewCellStyleDefault
                                                                       reuseIdentifier:@"cell_3"];
            }
            [cell setSelectionStyle: UITableViewCellSelectionStyleNone];
            //
            [cell.teamMemberButton addTarget:self
                                      action:@selector(teamMemberButtonFunctionality:)
                            forControlEvents:UIControlEventTouchUpInside];
            if (selectedTeamMember)
                [cell.teamMemberButton setTitle:selectedTeamMember.title forState:UIControlStateNormal];
            
            [cell.brandButton addTarget:self
                                 action:@selector(brandButtonFunctionality:)
                       forControlEvents:UIControlEventTouchUpInside];
            if (selectedBrand)
                [cell.brandButton setTitle:selectedBrand.title forState:UIControlStateNormal];
            
            [cell.presentationButton addTarget:self
                                 action:@selector(presentationsFunctionality:)
                       forControlEvents:UIControlEventTouchUpInside];
            if (selectedPresentation)
                [cell.presentationButton setTitle:selectedPresentation.title forState:UIControlStateNormal];
         
              
                            
     
            
            return cell;
        }
            break;
        case 1: {
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell_1" forIndexPath:indexPath];
            if (cell == nil) {
                cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell_1"];
            }
            [cell setSelectionStyle: UITableViewCellSelectionStyleGray];
            
            return cell;
        }
            break;
        case 2: {
            //        [cell setSelectionStyle: UITableViewCellSelectionStyleNone];
            //
            //        CoachingDaysRepObject* object = self.tableData[indexPath.section - 1];
            //        if (indexPath.row == 0){
            //            [cell.flsmNameLabel setText: object.name_flsm];
            //        }
            //        NSString *repName = [NSString stringWithFormat:@"%@",[object.coachingDaysRep[indexPath.row] objectForKey:@"rep_name"]];
            //        NSString *kDays = [NSString stringWithFormat:@"%@",[object.coachingDaysRep[indexPath.row] objectForKey:@"coachingDaysPerRep"]];
            //
            //        double tcpaPercentage = [kDays doubleValue] ;
            //
            //        [cell.repNameLabel setText: repName];
            //        [cell.coachingDaysRepLabel setText: [NSString stringWithFormat:@"%.2f", tcpaPercentage]];
            CustomerFeedbackCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell_2"
                                                                                             forIndexPath:indexPath];
            if (cell == nil) {
                cell = [[CustomerFeedbackCell alloc] initWithStyle:UITableViewCellStyleDefault
                                                                       reuseIdentifier:@"cell_2"];
            }
            [cell setSelectionStyle: UITableViewCellSelectionStyleNone];
           // NSLog(@"selection_pres : %lu", (unsigned long)self->selection_pres);
            
            
           // [cell.brandLabel setText:@"HAYA"];
            
                        if (selection_pres < [_tableData count] ) {
                            NSLog(@"selection_pres : %lu", (unsigned long)self->selection_pres);
                            [cell.brandLabel setText: _tableData[selection_pres].name_brand];
                            [cell.presentationLabel setText: _tableData[selection_pres].presentation];
                                                       
                        }
                        
            return cell;

        
            
           

            
            
            

           
            
           
        }
            break;
        case 3:{
            CustomerFeedbackCell_4 *cell = [tableView dequeueReusableCellWithIdentifier:@"cell_4"
                                                                                             forIndexPath:indexPath];
            if (cell == nil) {
                cell = [[CustomerFeedbackCell_4 alloc] initWithStyle:UITableViewCellStyleDefault
                                                                       reuseIdentifier:@"cell_4"];
            }
            [cell setSelectionStyle: UITableViewCellSelectionStyleNone];
            
          
            [cell.numLikeTotalLabel setText:[total valueForKey:@"total_num_like"]];
            [cell.numNeutralTotalLabel setText:[total valueForKey:@"totalCycle3"]];
            [cell.numDislikeTotalLabel setText:[total valueForKey:@"total_num_dislike"]];
         
            
            return cell;
        }
            break;
        default:
            return nil;
            break;
    }
    } else{
        In_Cell_TableViewCell *incell = [tableView dequeueReusableCellWithIdentifier:@"in_cell" forIndexPath:indexPath];
        if (incell == nil) {
            incell = [[In_Cell_TableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"in_cell"];
        }
        [incell setSelectionStyle: UITableViewCellSelectionStyleGray];

        
        
            CustomerFeedbackObject1* object = _tableData[selection_pres];
       
            [incell.messageLabel setText: [NSString stringWithFormat:@"%@", [object.slide_feedback_array[indexPath.row] objectForKey:@"note"]]];
        
        if(indexPath.row >= [_tableData[selection_pres].slide_feedback_array count] -1 ){
            NSLog(@"first : %@", @"here1");
            selection_pres++ ;
        }
        return incell;

      
    }

    
   
}




//
//#pragma mark - Functions
- (void)teamMemberButtonFunctionality:(id)sender {
    [[FAPickerView picker] showWithItems:teamMembersList
                            selectedItem:selectedTeamMember
                                  filter:NO
                             HeaderTitle:NSLocalizedString(@"team_member", nil)
                          WithCompletion:^(FAPickerItem *item) {
                              NSLog(@"Selected Item = %@", [item title]);
                              self->selectedTeamMember = item;
                              [self.tableView reloadData];
       
                          } cancel:nil];
}

- (void)presentationsFunctionality:(UIButton *)sender {
    [[FAPickerView picker] showWithItems:presentationList
                            selectedItem:selectedPresentation
                                  filter:NO
                             HeaderTitle:NSLocalizedString(@"presentation", nil)
                          WithCompletion:^(FAPickerItem *item) {
                              NSLog(@"Selected Item = %@", [item title]);
                              self->selectedPresentation = item;
                            self->_filterButton.enabled = YES;
                              [self.tableView reloadData];
                          } cancel:nil];
    

    
}


- (void)brandButtonFunctionality:(id)sender {
    [[FAPickerView picker] showWithItems:brandsList
                            selectedItem:selectedBrand
                                  filter:NO
                             HeaderTitle:NSLocalizedString(@"brands", nil)
                          WithCompletion:^(FAPickerItem *item) {
                              NSLog(@"Selected Item = %@", [item title]);
                              self->selectedBrand = item;
        self->_filterButton.enabled = YES;
    //    self->total_notes = 0 ;
        
        self->presentationList = [[NSMutableArray alloc] init];
        self->selectedPresentation = nil ;
        [self.tableView reloadData];
      //  self->selectedPresentation.Id = @"" ;
        [self getPresentationList] ;
            
          
        
                          } cancel:nil];
}

@end

@implementation CustomerFeedbackCell

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];
    // Configure the view for the selected state
}

@end

@implementation CustomerFeedbackCell_3

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];
    // Configure the view for the selected state
}

@end

@implementation CustomerFeedbackCell_4

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];
    // Configure the view for the selected state
}

@end


